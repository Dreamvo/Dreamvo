// Code generated by entc, DO NOT EDIT.

package mediaevents

import (
	"fmt"
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the mediaevents type in the database.
	Label = "media_events"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldLevel holds the string denoting the level field in the database.
	FieldLevel = "level"
	// FieldReason holds the string denoting the reason field in the database.
	FieldReason = "reason"
	// FieldMessage holds the string denoting the message field in the database.
	FieldMessage = "message"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"

	// EdgeMedia holds the string denoting the media edge name in mutations.
	EdgeMedia = "media"

	// Table holds the table name of the mediaevents in the database.
	Table = "media_events"
	// MediaTable is the table the holds the media relation/edge.
	MediaTable = "media_events"
	// MediaInverseTable is the table name for the Media entity.
	// It exists in this package in order to avoid circular dependency with the "media" package.
	MediaInverseTable = "media"
	// MediaColumn is the table column denoting the media relation/edge.
	MediaColumn = "media"
)

// Columns holds all SQL columns for mediaevents fields.
var Columns = []string{
	FieldID,
	FieldLevel,
	FieldReason,
	FieldMessage,
	FieldCreatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the MediaEvents type.
var ForeignKeys = []string{
	"media",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// ReasonValidator is a validator for the "reason" field. It is called by the builders before save.
	ReasonValidator func(string) error
	// MessageValidator is a validator for the "message" field. It is called by the builders before save.
	MessageValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the created_at field.
	DefaultCreatedAt func() time.Time
	// DefaultID holds the default value on creation for the id field.
	DefaultID func() uuid.UUID
)

// Level defines the type for the level enum field.
type Level string

// LevelNormal is the default Level.
const DefaultLevel = LevelNormal

// Level values.
const (
	LevelNormal  Level = "Normal"
	LevelWarning Level = "Warning"
	LevelError   Level = "Error"
)

func (l Level) String() string {
	return string(l)
}

// LevelValidator is a validator for the "level" field enum values. It is called by the builders before save.
func LevelValidator(l Level) error {
	switch l {
	case LevelNormal, LevelWarning, LevelError:
		return nil
	default:
		return fmt.Errorf("mediaevents: invalid enum value for level field: %q", l)
	}
}
